CREATE OR REPLACE PACKAGE SHAREDFUNCTIONS AS
    FUNCTION GET_ALL_DATA_FROM_TABLE(table_name IN VARCHAR2)
        RETURN SYS_REFCURSOR;
        
    FUNCTION GET_ALL_BY_ID(
        FILM_ID IN ALL_INFORMATION_ABOUT_FILM.ALL_INFORMATION_ABOUT_FILM_ID%TYPE
    ) RETURN SYS_REFCURSOR;
    
    FUNCTION FIND_BY_ID(
        FILM_ID IN ALL_INFORMATION_ABOUT_FILM.ALL_INFORMATION_ABOUT_FILM_ID%TYPE
    ) RETURN SYS_REFCURSOR;
        
    FUNCTION GET_ALL_LIKED_FILMS(USER_PROFILE_ID IN USER_PROFILE.USER_PROFILE_ID%TYPE)
        RETURN SYS_REFCURSOR;
        
    FUNCTION GET_ALL_SAVED_FILMS(USER_PROFILE_ID IN USER_PROFILE.USER_PROFILE_ID%TYPE)
        RETURN SYS_REFCURSOR;
        
    PROCEDURE ADD_TO_SAVED(
        USER_PROFILE_ID IN USERS_REVIEWS_ON_MOVIE.USER_PROFILE_ID%TYPE,
        ALL_INFORMATION_ABOUT_FILM_ID IN USERS_REVIEWS_ON_MOVIE.ALL_INFORMATION_ABOUT_FILM_ID%TYPE
    );
    
    PROCEDURE ADD_TO_LIKED(
        USER_PROFILE_ID IN USERS_REVIEWS_ON_MOVIE.USER_PROFILE_ID%TYPE,
        ALL_INFORMATION_ABOUT_FILM_ID IN USERS_REVIEWS_ON_MOVIE.ALL_INFORMATION_ABOUT_FILM_ID%TYPE
    );
    PROCEDURE ADD_NEW_VISIT(
        DATE_OF_VISIT IN VISITS_TABLE.DATE_OF_VISITS%TYPE
    );
    
     PROCEDURE ADD_COMMENT(
        USER_REVIEW_TEXT IN USERS_REVIEWS_ON_MOVIE.USER_REVIEW_TEXT%TYPE,
        DATE_OF_REVIEW IN USERS_REVIEWS_ON_MOVIE.DATE_OF_REVIEW%TYPE,
        USER_PROFILE_ID IN USERS_REVIEWS_ON_MOVIE.USER_PROFILE_ID%TYPE,
        ALL_INFORMATION_ABOUT_FILM_ID IN USERS_REVIEWS_ON_MOVIE.ALL_INFORMATION_ABOUT_FILM_ID%TYPE
    );
    --INSERT INTO VISITS_TABLE VALUES (DEFAULT,TO_DATE('2003-12-12', 'YYYY-MM-DD'), 0);
        
END SharedFunctions;
/

CREATE OR REPLACE PACKAGE BODY ADMIN.SHAREDFUNCTIONS AS
    FUNCTION GET_ALL_DATA_FROM_TABLE(table_name IN VARCHAR2)
        RETURN SYS_REFCURSOR
    IS
        RESULT SYS_REFCURSOR;
    BEGIN
        OPEN RESULT FOR 
            'SELECT * FROM '||table_name;
        RETURN RESULT;
    END;
    
    PROCEDURE ADD_COMMENT(
        USER_REVIEW_TEXT IN USERS_REVIEWS_ON_MOVIE.USER_REVIEW_TEXT%TYPE,
        DATE_OF_REVIEW IN USERS_REVIEWS_ON_MOVIE.DATE_OF_REVIEW%TYPE,
        USER_PROFILE_ID IN USERS_REVIEWS_ON_MOVIE.USER_PROFILE_ID%TYPE,
        ALL_INFORMATION_ABOUT_FILM_ID IN USERS_REVIEWS_ON_MOVIE.ALL_INFORMATION_ABOUT_FILM_ID%TYPE
    ) IS
    BEGIN
        INSERT INTO USERS_REVIEWS_ON_MOVIE VALUES(
            DEFAULT,USER_REVIEW_TEXT,DATE_OF_REVIEW,USER_PROFILE_ID,ALL_INFORMATION_ABOUT_FILM_ID
        );
        COMMIT;
    END ADD_COMMENT;
    
    FUNCTION GET_ALL_BY_ID(
         FILM_ID IN ALL_INFORMATION_ABOUT_FILM.ALL_INFORMATION_ABOUT_FILM_ID%TYPE
    ) RETURN SYS_REFCURSOR
    IS
        V_FILM_CURSOR SYS_REFCURSOR;
    BEGIN
        OPEN V_FILM_CURSOR FOR
            SELECT ALL_INFORMATION_ABOUT_FILM.*,USERS_REVIEWS_ON_MOVIE.USER_REVIEW_TEXT,USERS_REVIEWS_ON_MOVIE.DATE_OF_REVIEW,USER_PROFILE.LOGIN,USER_PROFILE.AVATAR,USER_PROFILE.USER_ROLE,USERS_REVIEWS_ON_MOVIE.USERS_REVIEWS_ON_MOVIE_ID
                FROM ALL_INFORMATION_ABOUT_FILM
                    FULL OUTER JOIN USERS_REVIEWS_ON_MOVIE
                        ON USERS_REVIEWS_ON_MOVIE.ALL_INFORMATION_ABOUT_FILM_ID=ALL_INFORMATION_ABOUT_FILM.ALL_INFORMATION_ABOUT_FILM_ID
                    FULL OUTER JOIN USER_PROFILE
                        ON USER_PROFILE.USER_PROFILE_ID = USERS_REVIEWS_ON_MOVIE.USER_PROFILE_ID
                            WHERE ALL_INFORMATION_ABOUT_FILM.ALL_INFORMATION_ABOUT_FILM_ID = FILM_ID;
        RETURN V_FILM_CURSOR;
    END GET_ALL_BY_ID;
    
    FUNCTION FIND_BY_ID(
         FILM_ID IN ALL_INFORMATION_ABOUT_FILM.ALL_INFORMATION_ABOUT_FILM_ID%TYPE
    ) RETURN SYS_REFCURSOR
    IS
        V_FILM_CURSOR SYS_REFCURSOR;
    BEGIN
        OPEN V_FILM_CURSOR FOR
            SELECT *
                FROM ALL_INFORMATION_ABOUT_FILM
                    WHERE ALL_INFORMATION_ABOUT_FILM.ALL_INFORMATION_ABOUT_FILM_ID = FILM_ID;
        RETURN V_FILM_CURSOR;
    END FIND_BY_ID;
    
    FUNCTION GET_ALL_LIKED_FILMS(
        USER_PROFILE_ID IN USER_PROFILE.USER_PROFILE_ID%TYPE
    ) RETURN SYS_REFCURSOR IS
     RESULT SYS_REFCURSOR;
    BEGIN
        OPEN RESULT FOR 
            SELECT * FROM USER_LIKE 
                INNER JOIN ALL_INFORMATION_ABOUT_FILM
                    ON USER_LIKE.ALL_INFORMATION_ABOUT_FILM = ALL_INFORMATION_ABOUT_FILM.ALL_INFORMATION_ABOUT_FILM_ID
                        WHERE USER_LIKE.USER_PROFILE_ID = GET_ALL_LIKED_FILMS.USER_PROFILE_ID;
        RETURN RESULT;
    END GET_ALL_LIKED_FILMS;
    
    FUNCTION GET_ALL_SAVED_FILMS(
        USER_PROFILE_ID IN USER_PROFILE.USER_PROFILE_ID%TYPE
    ) RETURN SYS_REFCURSOR IS
     RESULT SYS_REFCURSOR;
    BEGIN
        OPEN RESULT FOR 
            SELECT * FROM USER_WATCH_LATER 
                INNER JOIN ALL_INFORMATION_ABOUT_FILM
                    ON USER_WATCH_LATER.ALL_INFORMATION_ABOUT_FILM = ALL_INFORMATION_ABOUT_FILM.ALL_INFORMATION_ABOUT_FILM_ID
                        WHERE USER_WATCH_LATER.USER_PROFILE_ID = GET_ALL_SAVED_FILMS.USER_PROFILE_ID;
        RETURN RESULT;
    END GET_ALL_SAVED_FILMS;
    
    PROCEDURE ADD_NEW_VISIT(
        DATE_OF_VISIT IN VISITS_TABLE.DATE_OF_VISITS%TYPE
    ) IS
    BEGIN
        INSERT INTO VISITS_TABLE VALUES (DEFAULT,TO_DATE(DATE_OF_VISIT, 'YYYY-MM-DD'), 1);
        COMMIT;
    END;
    
    PROCEDURE ADD_TO_SAVED(
        USER_PROFILE_ID IN USERS_REVIEWS_ON_MOVIE.USER_PROFILE_ID%TYPE,
        ALL_INFORMATION_ABOUT_FILM_ID IN USERS_REVIEWS_ON_MOVIE.ALL_INFORMATION_ABOUT_FILM_ID%TYPE
    ) IS
    HERE NUMBER:=0;
    BEGIN
        SELECT COUNT(*) INTO HERE FROM USER_WATCH_LATER
            WHERE USER_WATCH_LATER.USER_PROFILE_ID =USER_PROFILE_ID 
                AND 
            USER_WATCH_LATER.ALL_INFORMATION_ABOUT_FILM =ALL_INFORMATION_ABOUT_FILM_ID;
            
        IF(HERE=1)THEN
            DELETE USER_WATCH_LATER 
                WHERE USER_WATCH_LATER.USER_PROFILE_ID =USER_PROFILE_ID AND USER_WATCH_LATER.ALL_INFORMATION_ABOUT_FILM =ALL_INFORMATION_ABOUT_FILM_ID;
            COMMIT;
        ELSE 
            INSERT INTO USER_WATCH_LATER VALUES(
                DEFAULT,ALL_INFORMATION_ABOUT_FILM_ID,USER_PROFILE_ID
            );
            COMMIT;
        END IF;       
    END ADD_TO_SAVED;
    
    PROCEDURE ADD_TO_LIKED(
        USER_PROFILE_ID IN USERS_REVIEWS_ON_MOVIE.USER_PROFILE_ID%TYPE,
        ALL_INFORMATION_ABOUT_FILM_ID IN USERS_REVIEWS_ON_MOVIE.ALL_INFORMATION_ABOUT_FILM_ID%TYPE
    ) IS
    HERE NUMBER:=0;
    BEGIN
        SELECT COUNT(*) INTO HERE FROM USER_LIKE
            WHERE USER_LIKE.USER_PROFILE_ID =USER_PROFILE_ID 
                AND 
            USER_LIKE.ALL_INFORMATION_ABOUT_FILM =ALL_INFORMATION_ABOUT_FILM_ID;
            
        IF(HERE=1)THEN
            DELETE USER_LIKE 
                WHERE USER_LIKE.USER_PROFILE_ID =ADD_TO_LIKED.USER_PROFILE_ID AND USER_LIKE.ALL_INFORMATION_ABOUT_FILM =ADD_TO_LIKED.ALL_INFORMATION_ABOUT_FILM_ID;
            COMMIT;
        ELSE 
            INSERT INTO USER_LIKE VALUES(
                DEFAULT,ALL_INFORMATION_ABOUT_FILM_ID,USER_PROFILE_ID
            );
            COMMIT;
        END IF;
    END ADD_TO_LIKED;
    
END SharedFunctions;
/
--TYPE FOR GENRE COLUMN OF ALL_INFORMATION_ABOUT_FILM
--Comparison methods use MAP MEMBER FUNCTION or ORDER MEMBER FUNCTION
--Non-comparison member methods are declared as either MEMBER FUNCTION or MEMBER PROCEDURE.
--SELF IN OUT NOCOPY(–ежим передачи параметров NOCOPY требует, чтобы €дро PL/SQL передавало аргументы IN OUT по ссылке, а не по значению.)

CREATE SEQUENCE SEQ_GENRE
 START WITH     1
 INCREMENT BY   1
 NOCACHE
 NOCYCLE;

--ѕ–ќ“ќ“»ѕ
CREATE TYPE GENRE_TYPE_CONSTRUCTOR AS OBJECT(
    GENRE_ID INT,
    GENRE_NAME VARCHAR2(50),
    CONSTRUCTOR FUNCTION GENRE_TYPE_CONSTRUCTOR(P_GENRE_NAME VARCHAR2)RETURN SELF AS RESULT,
    MAP MEMBER FUNCTION GET_GENRE_ID RETURN INT,
    MEMBER PROCEDURE DISPLAY_GENRE(SELF IN OUT NOCOPY GENRE_TYPE_CONSTRUCTOR)
    
);
--–≈јЋ»«ј÷»я
CREATE TYPE BODY GENRE_TYPE_CONSTRUCTOR AS
    CONSTRUCTOR FUNCTION GENRE_TYPE_CONSTRUCTOR(P_GENRE_NAME VARCHAR2)RETURN SELF AS RESULT IS
        BEGIN
            SELF.GENRE_ID := SEQ_GENRE.NEXTVAL;
            SELF.GENRE_NAME := P_GENRE_NAME;
            RETURN;
        END;
    MAP MEMBER FUNCTION GET_GENRE_ID RETURN INT IS
        BEGIN
            RETURN GENRE_ID;
        END;
    MEMBER PROCEDURE DISPLAY_GENRE(SELF IN OUT NOCOPY GENRE_TYPE_CONSTRUCTOR)IS
        BEGIN
            DBMS_OUTPUT.put_line(TO_CHAR(GENRE_ID) || ' - '  || 'GENRE: ' || ' - '  || GENRE_NAME);
        END;
END;

CREATE TYPE GENRE_TYPE_INSTANCE AS TABLE OF GENRE_TYPE_CONSTRUCTOR;
COMMIT;

DROP TYPE GENRE_TYPE_CONSTRUCTOR;
DROP TYPE GENRE_TYPE_INSTANCE;
COMMIT;

------------------------------------------------
CREATE SEQUENCE SEQ_DIRECTOR
 START WITH     1
 INCREMENT BY   1
 NOCACHE
 NOCYCLE;


CREATE TYPE DIRECTOR_TYPE_CONSTRUCTOR AS OBJECT(
    DIRECTOR_ID INT,
    DIRECTOR_NAME VARCHAR2(50),
    CONSTRUCTOR FUNCTION DIRECTOR_TYPE_CONSTRUCTOR(P_DIRECTOR_NAME VARCHAR2)RETURN SELF AS RESULT,
    MAP MEMBER FUNCTION GET_DIRECTOR_ID RETURN INT,
    MEMBER PROCEDURE DISPLAY_DIRECTOR_NAME(SELF IN OUT NOCOPY DIRECTOR_TYPE_CONSTRUCTOR)
)

CREATE TYPE BODY DIRECTOR_TYPE_CONSTRUCTOR AS
    CONSTRUCTOR FUNCTION DIRECTOR_TYPE_CONSTRUCTOR(P_DIRECTOR_NAME VARCHAR2)RETURN SELF AS RESULT IS
        BEGIN
            SELF.DIRECTOR_ID := SEQ_DIRECTOR.NEXTVAL;
            SELF.DIRECTOR_NAME := P_DIRECTOR_NAME;
            RETURN;
        END;
    MAP MEMBER FUNCTION GET_DIRECTOR_ID RETURN INT IS
        BEGIN
            RETURN DIRECTOR_ID;
        END;
    MEMBER PROCEDURE DISPLAY_DIRECTOR_NAME(SELF IN OUT NOCOPY DIRECTOR_TYPE_CONSTRUCTOR)IS
        BEGIN
            DBMS_OUTPUT.put_line(TO_CHAR(DIRECTOR_ID) || ' - '  || 'GENRE: ' || ' - '  || DIRECTOR_NAME);
        END;
END;

CREATE TYPE DIRECTOR_TYPE_INSTANCE AS TABLE OF DIRECTOR_TYPE_CONSTRUCTOR;
COMMIT;
DROP TYPE DIRECTOR_TYPE_CONSTRUCTOR;
DROP TYPE DIRECTOR_TYPE_INSTANCE;
COMMIT;

------------------------------------------------
CREATE SEQUENCE SEQ_ACTOR
 START WITH     1
 INCREMENT BY   1
 NOCACHE
 NOCYCLE;

CREATE TYPE ACTOR_TYPE_CONSTRUCTOR AS OBJECT(
    ACTOR_ID INT,
    ACTOR_NAME VARCHAR2(50),
    CONSTRUCTOR FUNCTION ACTOR_TYPE_CONSTRUCTOR(P_ACTOR_NAME VARCHAR2)RETURN SELF AS RESULT,
    MAP MEMBER FUNCTION GET_ACTOR_ID RETURN INT,
    MEMBER PROCEDURE DISPLAY_ACTOR_NAME(SELF IN OUT NOCOPY ACTOR_TYPE_CONSTRUCTOR)
)

CREATE TYPE BODY ACTOR_TYPE_CONSTRUCTOR AS
    CONSTRUCTOR FUNCTION ACTOR_TYPE_CONSTRUCTOR(P_ACTOR_NAME VARCHAR2)RETURN SELF AS RESULT IS
        BEGIN
            SELF.ACTOR_ID := SEQ_ACTOR.NEXTVAL;
            SELF.ACTOR_NAME := P_ACTOR_NAME;
            RETURN;
        END;
    MAP MEMBER FUNCTION GET_ACTOR_ID RETURN INT AS
        BEGIN
            RETURN ACTOR_ID;
        END;
    MEMBER PROCEDURE DISPLAY_ACTOR_NAME(SELF IN OUT NOCOPY ACTOR_TYPE_CONSTRUCTOR)IS
        BEGIN
            DBMS_OUTPUT.put_line(TO_CHAR(ACTOR_ID) || ' - '  || 'GENRE: ' || ' - '  || ACTOR_NAME);
        END;
END;

CREATE TYPE ACTOR_TYPE_INSTANCE AS TABLE OF ACTOR_TYPE_CONSTRUCTOR;
COMMIT;

DROP TYPE ACTOR_TYPE_CONSTRUCTOR;
DROP TYPE ACTOR_TYPE_INSTANCE;
COMMIT;
------------------------------------------------
CREATE SEQUENCE SEQ_FACTS
 START WITH     1
 INCREMENT BY   1
 NOCACHE
 NOCYCLE;
 
 CREATE TYPE INTERESTING_FACT_TYPE_CONSTRUCTOR AS OBJECT(
    INTERESTING_FACT_ID INT,
    INTERSTING_FACT VARCHAR2(50),
    CONSTRUCTOR FUNCTION INTERESTING_FACT_TYPE_CONSTRUCTOR(P_INTERSTING_FACT VARCHAR2)RETURN SELF AS RESULT,
    MAP MEMBER FUNCTION GET_INTERESTING_FACT_ID RETURN INT,
    MEMBER PROCEDURE DISPLAY_INTERSTING_FACT(SELF IN OUT NOCOPY INTERESTING_FACT_TYPE_CONSTRUCTOR)
)

CREATE TYPE BODY INTERESTING_FACT_TYPE_CONSTRUCTOR AS
    CONSTRUCTOR FUNCTION INTERESTING_FACT_TYPE_CONSTRUCTOR(P_INTERSTING_FACT VARCHAR2)RETURN SELF AS RESULT IS
        BEGIN
            SELF.INTERESTING_FACT_ID := SEQ_FACTS.NEXTVAL;
            SELF.INTERSTING_FACT := P_INTERSTING_FACT;
            RETURN;
        END;
    MAP MEMBER FUNCTION GET_INTERESTING_FACT_ID RETURN INT AS
        BEGIN
            RETURN INTERESTING_FACT_ID;
        END;
    MEMBER PROCEDURE DISPLAY_INTERSTING_FACT(SELF IN OUT NOCOPY INTERESTING_FACT_TYPE_CONSTRUCTOR)IS
        BEGIN
            DBMS_OUTPUT.put_line(TO_CHAR(INTERESTING_FACT_ID) || ' - '  || 'GENRE: ' || ' - '  || INTERSTING_FACT);
        END;
END;

CREATE TYPE INTERESTING_FACT_TYPE_INSTANCE AS TABLE OF INTERESTING_FACT_TYPE_CONSTRUCTOR;
COMMIT;

DROP TYPE INTERESTING_FACT_TYPE_CONSTRUCTOR;
DROP TYPE ACTOR_TYPE_INSTANCE;
COMMIT;


CREATE TABLE INTERESTING_FACT_ABOUT_FILM(
    INTERESTING_FACT_ABOUT_FILM_ID INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    FACT VARCHAR2(400)
)TABLESPACE CP_TS;




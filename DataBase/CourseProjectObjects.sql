------------------------------------------------
CREATE TABLE USER_PROFILE(
    USER_PROFILE_ID number GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    LOGIN varchar(100) NOT NULL,
    AVATAR BLOB NOT NULL,
    EMAIL varchar(200) NOT NULL,
    PASSWORD varchar(100) NOT NULL,
    USER_ROLE varchar(100) NOT NULL,
    CONSTRAINT CONSTRAIN_USER_ROLE CHECK(USER_ROLE IN('ROLE_User','ROLE_Admin'))
)TABLESPACE CP_TS;

SELECT * FROM USER_PROFILE;
DELETE USER_PROFILE WHERE USER_PROFILE_ID =1 ;
DROP TABLE USER_PROFILE PURGE;
------------------------------------------------
CREATE TABLE USERS_REVIEWS_ON_MOVIE(
    USERS_REVIEWS_ON_MOVIE_ID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    USER_REVIEW_TEXT VARCHAR2(1000),
    DATE_OF_REVIEW DATE,
    USER_PROFILE_ID NUMBER,
    ALL_INFORMATION_ABOUT_FILM_ID NUMBER,
    CONSTRAINT USER_PROFILE_ID_CONSTRAINT FOREIGN KEY (USER_PROFILE_ID) REFERENCES USER_PROFILE(USER_PROFILE_ID),
    CONSTRAINT ALL_INFORMATION_ABOUT_FILM_ID_CONSTRAINT FOREIGN KEY (ALL_INFORMATION_ABOUT_FILM_ID) REFERENCES ALL_INFORMATION_ABOUT_FILM(ALL_INFORMATION_ABOUT_FILM_ID)
)TABLESPACE CP_TS;

DROP TABLE USERS_REVIEWS_ON_MOVIE PURGE;
select *from USERS_REVIEWS_ON_MOVIE
------------------------------------------------
CREATE TABLE FRAME_FROM_MOVIE(
    FRAME_FROM_MOVIE_ID INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    FRAME_FROM_MOVIE BLOB NOT NULL,
    FILM_ID INT,
    CONSTRAINT FILM_ID_CONSTRAINT FOREIGN KEY (FILM_ID) REFERENCES ALL_INFORMATION_ABOUT_FILM(ALL_INFORMATION_ABOUT_FILM_ID)
)TABLESPACE CP_TS;

DROP TABLE FRAME_FROM_MOVIE PURGE;
------------------------------------------------
CREATE TABLE ALL_INFORMATION_ABOUT_FILM(
    ALL_INFORMATION_ABOUT_FILM_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    TITLE VARCHAR(100),
    ORIGINAL_TITLE VARCHAR(100),
    POSTER BLOB,--BLOB
    YEAR_OF_POSTING VARCHAR(20),--DATE
    COUNTRY VARCHAR(50),
    DESCRIPTION VARCHAR(500),
    RATING_IMDb FLOAT,
    RATING_KP FLOAT,
    BOX_OFFICE_RECEIPTS FLOAT,
    BUDGET FLOAT,
    AGE NUMBER,
    VIEWING_TIME VARCHAR(30),
    GENRES GENRE_TYPE_INSTANCE,
    DIRECTORS DIRECTOR_TYPE_INSTANCE,
    ACTORS ACTOR_TYPE_INSTANCE,
    INTERESTING_FACT INTERESTING_FACT_TYPE_INSTANCE
    )NESTED TABLE GENRES STORE AS GENRES_NT
     NESTED TABLE DIRECTORS STORE AS DIRECTORS_NT
     NESTED TABLE ACTORS STORE AS ACTORS_NT
     NESTED TABLE INTERESTING_FACT STORE AS INTERESTING_FACT_NT (TABLESPACE CP_TS);
    --
INSERT INTO ALL_INFORMATION_ABOUT_FILM VALUES(DEFAULT,'1','1','1','01/11/2023','1','1',2.0,2.4,2222,22,12,'2',
    GENRE_TYPE_INSTANCE(GENRE_TYPE_CONSTRUCTOR('BOEVIK'),GENRE_TYPE_CONSTRUCTOR('SSSS')),
    DIRECTOR_TYPE_INSTANCE(DIRECTOR_TYPE_CONSTRUCTOR('VALERA'),DIRECTOR_TYPE_CONSTRUCTOR('KIRILL')),
    ACTOR_TYPE_INSTANCE(ACTOR_TYPE_CONSTRUCTOR('POLINA'),ACTOR_TYPE_CONSTRUCTOR('DASHA')),
    INTERESTING_FACT_TYPE_INSTANCE(INTERESTING_FACT_TYPE_CONSTRUCTOR('XXXXXCCC'),INTERESTING_FACT_TYPE_CONSTRUCTOR('SSSSS'),INTERESTING_FACT_TYPE_CONSTRUCTOR('1111112'))
);
    
DROP TABLE ALL_INFORMATION_ABOUT_FILM PURGE;
------------------------------------------------
CREATE TABLE USER_WATCH_LATER(
    USER_WATCH_LATER_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    ALL_INFORMATION_ABOUT_FILM NUMBER,
    USER_PROFILE_ID NUMBER,
    CONSTRAINT ALL_INFORMATION_ABOUT_FILM_USER_WATCH_LATER_CONSTRAINT FOREIGN KEY (ALL_INFORMATION_ABOUT_FILM) REFERENCES ALL_INFORMATION_ABOUT_FILM(ALL_INFORMATION_ABOUT_FILM_ID),
    CONSTRAINT USER_PROFILE_ID_USER_WATCH_LATER_CONSTRAINT FOREIGN KEY(USER_PROFILE_ID)REFERENCES USER_PROFILE(USER_PROFILE_ID)
)TABLESPACE CP_TS;

DROP TABLE USER_WATCH_LATER;
------------------------------------------------
CREATE TABLE USER_LIKE(
    USER_LIKE_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    ALL_INFORMATION_ABOUT_FILM NUMBER,
    USER_PROFILE_ID NUMBER,
    CONSTRAINT ALL_INFORMATION_ABOUT_FILM_USER_LIKE_CONSTRAINT FOREIGN KEY (ALL_INFORMATION_ABOUT_FILM) REFERENCES ALL_INFORMATION_ABOUT_FILM(ALL_INFORMATION_ABOUT_FILM_ID),
    CONSTRAINT USER_PROFILE_ID_USER_LIKE_CONSTRAINT FOREIGN KEY(USER_PROFILE_ID)REFERENCES USER_PROFILE(USER_PROFILE_ID)
)TABLESPACE CP_TS;

SELECT *FROM USER_LIKE;
SELECT *FROM USER_WATCH_LATER;
------------------------------------------------



